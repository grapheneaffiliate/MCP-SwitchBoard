{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\atchi\\\\servers\\\\mcp-switchboard\\\\frontend\\\\src\\\\CommandHistory.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CommandHistory({\n  onSelectCommand\n}) {\n  _s();\n  const [showHistory, setShowHistory] = useState(false);\n  const [history, setHistory] = useState([]);\n  const [filterText, setFilterText] = useState('');\n\n  // Load command history from localStorage\n  useEffect(() => {\n    const savedHistory = localStorage.getItem('mcp_command_history');\n    if (savedHistory) {\n      try {\n        const parsedHistory = JSON.parse(savedHistory);\n        setHistory(parsedHistory);\n      } catch (error) {\n        console.error('Error parsing command history:', error);\n        setHistory([]);\n      }\n    }\n  }, []);\n\n  // Filter history based on filterText\n  const filteredHistory = history.filter(cmd => cmd.toLowerCase().includes(filterText.toLowerCase()));\n\n  // Clear command history\n  const clearHistory = () => {\n    localStorage.removeItem('mcp_command_history');\n    setHistory([]);\n  };\n\n  // Handle command selection\n  const handleSelectCommand = cmd => {\n    onSelectCommand(cmd);\n    setShowHistory(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"command-history\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"command-history-toggle\",\n      onClick: () => setShowHistory(!showHistory),\n      children: showHistory ? 'Hide command history' : 'Show command history'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), showHistory && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"command-history-dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"command-history-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"command-history-filter\",\n          placeholder: \"Filter commands...\",\n          value: filterText,\n          onChange: e => setFilterText(e.target.value),\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"command-history-clear\",\n          onClick: clearHistory,\n          title: \"Clear command history\",\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"command-history-list\",\n        children: filteredHistory.length > 0 ? filteredHistory.map((cmd, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"command-history-item\",\n          onClick: () => handleSelectCommand(cmd),\n          title: cmd,\n          children: cmd\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"command-history-empty\",\n          children: history.length === 0 ? 'No command history' : 'No matching commands found'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(CommandHistory, \"vBQgmCT0tTjElNODFyNMFdnDs5o=\");\n_c = CommandHistory;\nexport default CommandHistory;\nvar _c;\n$RefreshReg$(_c, \"CommandHistory\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CommandHistory","onSelectCommand","_s","showHistory","setShowHistory","history","setHistory","filterText","setFilterText","savedHistory","localStorage","getItem","parsedHistory","JSON","parse","error","console","filteredHistory","filter","cmd","toLowerCase","includes","clearHistory","removeItem","handleSelectCommand","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","autoFocus","title","length","map","index","_c","$RefreshReg$"],"sources":["C:/Users/atchi/servers/mcp-switchboard/frontend/src/CommandHistory.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction CommandHistory({ onSelectCommand }) {\r\n  const [showHistory, setShowHistory] = useState(false);\r\n  const [history, setHistory] = useState([]);\r\n  const [filterText, setFilterText] = useState('');\r\n  \r\n  // Load command history from localStorage\r\n  useEffect(() => {\r\n    const savedHistory = localStorage.getItem('mcp_command_history');\r\n    if (savedHistory) {\r\n      try {\r\n        const parsedHistory = JSON.parse(savedHistory);\r\n        setHistory(parsedHistory);\r\n      } catch (error) {\r\n        console.error('Error parsing command history:', error);\r\n        setHistory([]);\r\n      }\r\n    }\r\n  }, []);\r\n  \r\n  // Filter history based on filterText\r\n  const filteredHistory = history.filter(cmd => \r\n    cmd.toLowerCase().includes(filterText.toLowerCase())\r\n  );\r\n  \r\n  // Clear command history\r\n  const clearHistory = () => {\r\n    localStorage.removeItem('mcp_command_history');\r\n    setHistory([]);\r\n  };\r\n  \r\n  // Handle command selection\r\n  const handleSelectCommand = (cmd) => {\r\n    onSelectCommand(cmd);\r\n    setShowHistory(false);\r\n  };\r\n  \r\n  return (\r\n    <div className=\"command-history\">\r\n      <button \r\n        className=\"command-history-toggle\" \r\n        onClick={() => setShowHistory(!showHistory)}\r\n      >\r\n        {showHistory ? 'Hide command history' : 'Show command history'}\r\n      </button>\r\n      \r\n      {showHistory && (\r\n        <div className=\"command-history-dropdown\">\r\n          <div className=\"command-history-header\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"command-history-filter\"\r\n              placeholder=\"Filter commands...\"\r\n              value={filterText}\r\n              onChange={(e) => setFilterText(e.target.value)}\r\n              autoFocus\r\n            />\r\n            <button \r\n              className=\"command-history-clear\"\r\n              onClick={clearHistory}\r\n              title=\"Clear command history\"\r\n            >\r\n              Clear\r\n            </button>\r\n          </div>\r\n          \r\n          <div className=\"command-history-list\">\r\n            {filteredHistory.length > 0 ? (\r\n              filteredHistory.map((cmd, index) => (\r\n                <div \r\n                  key={index} \r\n                  className=\"command-history-item\"\r\n                  onClick={() => handleSelectCommand(cmd)}\r\n                  title={cmd}\r\n                >\r\n                  {cmd}\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <div className=\"command-history-empty\">\r\n                {history.length === 0 \r\n                  ? 'No command history' \r\n                  : 'No matching commands found'}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CommandHistory;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}