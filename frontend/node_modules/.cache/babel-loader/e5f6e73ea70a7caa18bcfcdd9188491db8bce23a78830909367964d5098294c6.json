{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\atchi\\\\servers\\\\mcp-switchboard\\\\frontend\\\\src\\\\AddServerForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddServerForm({\n  onAdd\n}) {\n  _s();\n  const [name, setName] = useState('');\n  const [host, setHost] = useState('');\n  const [port, setPort] = useState('');\n  const [type, setType] = useState('');\n  const [apiKey, setApiKey] = useState('');\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const newServer = {\n      name,\n      host,\n      port: parseInt(port),\n      type,\n      apiKey\n    };\n    try {\n      const response = await fetch('http://localhost:9877/servers', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newServer)\n      });\n      if (response.ok) {\n        console.log('Server added successfully');\n        onAdd(); // Notify the parent component to refresh the server list\n        // Clear the form\n        setName('');\n        setHost('');\n        setPort('');\n        setType('');\n        setApiKey('');\n      } else {\n        console.error('Failed to add server');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Host:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: host,\n        onChange: e => setHost(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Port:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: port,\n        onChange: e => setPort(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Type:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: type,\n        onChange: e => setType(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"API Key:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: apiKey,\n        onChange: e => setApiKey(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Server\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(AddServerForm, \"8saQSSyZobBblfi1vWKjfvpuc7U=\");\n_c = AddServerForm;\nexport default AddServerForm;\nvar _c;\n$RefreshReg$(_c, \"AddServerForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AddServerForm","onAdd","_s","name","setName","host","setHost","port","setPort","type","setType","apiKey","setApiKey","handleSubmit","event","preventDefault","newServer","parseInt","response","fetch","method","headers","body","JSON","stringify","ok","console","log","error","onSubmit","children","value","onChange","e","target","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/atchi/servers/mcp-switchboard/frontend/src/AddServerForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction AddServerForm({ onAdd }) {\r\n  const [name, setName] = useState('');\r\n  const [host, setHost] = useState('');\r\n  const [port, setPort] = useState('');\r\n  const [type, setType] = useState('');\r\n  const [apiKey, setApiKey] = useState('');\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const newServer = {\r\n      name,\r\n      host,\r\n      port: parseInt(port),\r\n      type,\r\n      apiKey,\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:9877/servers', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(newServer),\r\n      });\r\n\r\n      if (response.ok) {\r\n        console.log('Server added successfully');\r\n        onAdd(); // Notify the parent component to refresh the server list\r\n        // Clear the form\r\n        setName('');\r\n        setHost('');\r\n        setPort('');\r\n        setType('');\r\n        setApiKey('');\r\n      } else {\r\n        console.error('Failed to add server');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n        Name:\r\n        <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} required />\r\n      </label>\r\n      <label>\r\n        Host:\r\n        <input type=\"text\" value={host} onChange={(e) => setHost(e.target.value)} required />\r\n      </label>\r\n      <label>\r\n        Port:\r\n        <input type=\"number\" value={port} onChange={(e) => setPort(e.target.value)} required />\r\n      </label>\r\n      <label>\r\n        Type:\r\n        <input type=\"text\" value={type} onChange={(e) => setType(e.target.value)} required />\r\n      </label>\r\n      <label>\r\n        API Key:\r\n        <input type=\"text\" value={apiKey} onChange={(e) => setApiKey(e.target.value)} />\r\n      </label>\r\n      <button type=\"submit\">Add Server</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default AddServerForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}