{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\atchi\\\\servers\\\\mcp-switchboard\\\\frontend\\\\src\\\\CommandHistory.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CommandHistory({\n  onSelectCommand\n}) {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [commandHistory, setCommandHistory] = useState([]);\n  const [filter, setFilter] = useState('');\n  useEffect(() => {\n    // Load command history from localStorage on component mount\n    const savedHistory = localStorage.getItem('mcp_command_history');\n    if (savedHistory) {\n      try {\n        setCommandHistory(JSON.parse(savedHistory));\n      } catch (error) {\n        console.error('Error parsing command history:', error);\n        // Reset history if there's an error\n        localStorage.setItem('mcp_command_history', JSON.stringify([]));\n      }\n    }\n  }, []);\n  const toggleHistory = () => {\n    setIsOpen(!isOpen);\n    // Reset filter when opening\n    if (!isOpen) {\n      setFilter('');\n    }\n  };\n  const handleSelectCommand = command => {\n    if (onSelectCommand) {\n      onSelectCommand(command);\n    }\n    setIsOpen(false);\n  };\n  const handleClearHistory = e => {\n    e.stopPropagation();\n    if (window.confirm('Are you sure you want to clear your command history?')) {\n      setCommandHistory([]);\n      localStorage.setItem('mcp_command_history', JSON.stringify([]));\n    }\n  };\n  const filteredCommands = commandHistory.filter(cmd => cmd.toLowerCase().includes(filter.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"command-history\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"command-history-toggle\",\n      onClick: toggleHistory,\n      children: isOpen ? 'Hide command history' : 'Show command history'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"command-history-dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"command-history-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"command-history-filter\",\n          placeholder: \"Filter commands...\",\n          value: filter,\n          onChange: e => setFilter(e.target.value),\n          onClick: e => e.stopPropagation()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"command-history-clear\",\n          onClick: handleClearHistory,\n          title: \"Clear history\",\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), filteredCommands.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"command-history-empty\",\n        children: filter ? 'No matching commands found' : 'No command history'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"command-history-list\",\n        children: filteredCommands.map((command, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"command-history-item\",\n          onClick: () => handleSelectCommand(command),\n          children: command\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(CommandHistory, \"MDZLJQ3FhIffPas7mwmMg7xdJvc=\");\n_c = CommandHistory;\nexport default CommandHistory;\nvar _c;\n$RefreshReg$(_c, \"CommandHistory\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CommandHistory","onSelectCommand","_s","isOpen","setIsOpen","commandHistory","setCommandHistory","filter","setFilter","savedHistory","localStorage","getItem","JSON","parse","error","console","setItem","stringify","toggleHistory","handleSelectCommand","command","handleClearHistory","e","stopPropagation","window","confirm","filteredCommands","cmd","toLowerCase","includes","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","title","length","map","index","_c","$RefreshReg$"],"sources":["C:/Users/atchi/servers/mcp-switchboard/frontend/src/CommandHistory.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction CommandHistory({ onSelectCommand }) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [commandHistory, setCommandHistory] = useState([]);\r\n  const [filter, setFilter] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Load command history from localStorage on component mount\r\n    const savedHistory = localStorage.getItem('mcp_command_history');\r\n    if (savedHistory) {\r\n      try {\r\n        setCommandHistory(JSON.parse(savedHistory));\r\n      } catch (error) {\r\n        console.error('Error parsing command history:', error);\r\n        // Reset history if there's an error\r\n        localStorage.setItem('mcp_command_history', JSON.stringify([]));\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const toggleHistory = () => {\r\n    setIsOpen(!isOpen);\r\n    // Reset filter when opening\r\n    if (!isOpen) {\r\n      setFilter('');\r\n    }\r\n  };\r\n\r\n  const handleSelectCommand = (command) => {\r\n    if (onSelectCommand) {\r\n      onSelectCommand(command);\r\n    }\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const handleClearHistory = (e) => {\r\n    e.stopPropagation();\r\n    if (window.confirm('Are you sure you want to clear your command history?')) {\r\n      setCommandHistory([]);\r\n      localStorage.setItem('mcp_command_history', JSON.stringify([]));\r\n    }\r\n  };\r\n\r\n  const filteredCommands = commandHistory.filter(cmd => \r\n    cmd.toLowerCase().includes(filter.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div className=\"command-history\">\r\n      <button \r\n        className=\"command-history-toggle\"\r\n        onClick={toggleHistory}\r\n      >\r\n        {isOpen ? 'Hide command history' : 'Show command history'}\r\n      </button>\r\n      \r\n      {isOpen && (\r\n        <div className=\"command-history-dropdown\">\r\n          <div className=\"command-history-header\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"command-history-filter\"\r\n              placeholder=\"Filter commands...\"\r\n              value={filter}\r\n              onChange={(e) => setFilter(e.target.value)}\r\n              onClick={(e) => e.stopPropagation()}\r\n            />\r\n            <button \r\n              className=\"command-history-clear\"\r\n              onClick={handleClearHistory}\r\n              title=\"Clear history\"\r\n            >\r\n              Clear\r\n            </button>\r\n          </div>\r\n          \r\n          {filteredCommands.length === 0 ? (\r\n            <div className=\"command-history-empty\">\r\n              {filter ? 'No matching commands found' : 'No command history'}\r\n            </div>\r\n          ) : (\r\n            <div className=\"command-history-list\">\r\n              {filteredCommands.map((command, index) => (\r\n                <div \r\n                  key={index} \r\n                  className=\"command-history-item\"\r\n                  onClick={() => handleSelectCommand(command)}\r\n                >\r\n                  {command}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CommandHistory;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}