{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\atchi\\\\servers\\\\mcp-switchboard\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _servers$find, _servers$find2;\n  const [servers, setServers] = useState([]);\n  const [selectedServer, setSelectedServer] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [command, setCommand] = useState('');\n  const [commandOutput, setCommandOutput] = useState([]);\n  const [systemMetrics, setSystemMetrics] = useState({\n    cpuUsage: 0,\n    ramUsage: 0,\n    diskUsage: 0,\n    networkActivity: {\n      bytes_sent: 0,\n      bytes_recv: 0\n    }\n  });\n  const [serverMetrics, setServerMetrics] = useState({});\n  const websocketRef = useRef(null);\n  const messagesEndRef = useRef(null);\n\n  // Scroll to bottom of messages\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, commandOutput]);\n  useEffect(() => {\n    // Connect to WebSocket\n    const websocket = new WebSocket(\"ws://localhost:8000/ws/1\");\n    websocketRef.current = websocket;\n    websocket.onopen = () => {\n      console.log(\"Connected to WebSocket\");\n      setMessages(prev => [...prev, \"Connected to MCP Switchboard\"]);\n    };\n    websocket.onmessage = event => {\n      const data = JSON.parse(event.data);\n      console.log(\"Message from server:\", data);\n      if (data.type === \"server_list\") {\n        setServers(data.servers);\n        if (data.servers.length > 0 && !selectedServer) {\n          setSelectedServer(data.servers[0].id);\n        }\n      } else if (data.type === \"server_status_update\") {\n        setServers(prev => prev.map(server => server.id === data.server_id ? {\n          ...server,\n          status: data.status\n        } : server));\n        setMessages(prev => [...prev, data.message]);\n      } else if (data.type === \"command_result\") {\n        setCommandOutput(prev => [...prev, {\n          server: data.server_id,\n          success: data.success,\n          output: data.output\n        }]);\n        setMessages(prev => [...prev, data.message]);\n      } else if (data.type === \"server_metrics\") {\n        setServerMetrics(prev => ({\n          ...prev,\n          [data.server_id]: data.metrics\n        }));\n      } else {\n        setMessages(prev => [...prev, JSON.stringify(data)]);\n      }\n    };\n    websocket.onclose = () => {\n      console.log(\"Disconnected from WebSocket\");\n      setMessages(prev => [...prev, \"Disconnected from MCP Switchboard\"]);\n    };\n    return () => {\n      websocket.close();\n    };\n  }, []);\n\n  // Fetch system metrics\n  useEffect(() => {\n    const fetchSystemMetrics = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8000/metrics\", {\n          headers: {\n            'Authorization': 'Bearer fake_token',\n            'Content-Type': 'application/json'\n          },\n          credentials: 'include'\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setSystemMetrics({\n            cpuUsage: data.cpu_usage,\n            ramUsage: data.ram_usage,\n            diskUsage: data.disk_usage,\n            networkActivity: data.network_activity\n          });\n        } else {\n          console.error(\"Failed to fetch system metrics\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching system metrics:\", error);\n      }\n    };\n    fetchSystemMetrics();\n    const intervalId = setInterval(fetchSystemMetrics, 5000);\n    return () => clearInterval(intervalId);\n  }, []);\n\n  // Connect to a server\n  const handleConnectServer = serverId => {\n    if (websocketRef.current && websocketRef.current.readyState === WebSocket.OPEN) {\n      websocketRef.current.send(JSON.stringify({\n        type: \"connect_server\",\n        server_id: serverId\n      }));\n    }\n  };\n\n  // Disconnect from a server\n  const handleDisconnectServer = serverId => {\n    if (websocketRef.current && websocketRef.current.readyState === WebSocket.OPEN) {\n      websocketRef.current.send(JSON.stringify({\n        type: \"disconnect_server\",\n        server_id: serverId\n      }));\n    }\n  };\n\n  // Execute a command\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!selectedServer) {\n      setMessages(prev => [...prev, \"No server selected\"]);\n      return;\n    }\n    if (!command.trim()) {\n      setMessages(prev => [...prev, \"Command cannot be empty\"]);\n      return;\n    }\n\n    // Send command via WebSocket\n    if (websocketRef.current && websocketRef.current.readyState === WebSocket.OPEN) {\n      websocketRef.current.send(JSON.stringify({\n        type: \"execute_command\",\n        server_id: selectedServer,\n        command: command\n      }));\n      setCommand(\"\");\n    } else {\n      // Fallback to REST API if WebSocket is not available\n      try {\n        const response = await fetch(`http://localhost:8000/execute/${selectedServer}`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Authorization': 'Bearer fake_token'\n          },\n          body: `command=${command}`\n        });\n        if (response.ok) {\n          const data = await response.json();\n          console.log(\"Command executed successfully:\", data);\n          setMessages(prev => [...prev, data.message]);\n          setCommandOutput(prev => [...prev, {\n            server: selectedServer,\n            success: true,\n            output: data.output || data.message\n          }]);\n          setCommand(\"\");\n        } else {\n          console.error(\"Command execution failed:\", response.status);\n          setMessages(prev => [...prev, `Command execution failed: ${response.status}`]);\n        }\n      } catch (error) {\n        console.error(\"Error executing command:\", error);\n        setMessages(prev => [...prev, `Error executing command: ${error.message}`]);\n      }\n    }\n  };\n\n  // Format metrics for display\n  const formatBytes = bytes => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"MCP Switchboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Server Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"server-grid\",\n        children: servers.map(server => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `server-block ${selectedServer === server.id ? 'selected' : ''}`,\n          onClick: () => setSelectedServer(server.id),\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: server.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Host: \", server.host]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Port: \", server.port]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Type: \", server.type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `status ${server.status ? 'active' : 'inactive'}`,\n            children: [\"Status: \", server.status ? 'Connected' : 'Disconnected']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"server-actions\",\n            children: !server.status ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleConnectServer(server.id),\n              children: \"Connect\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDisconnectServer(server.id),\n              children: \"Disconnect\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this)]\n        }, server.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Task Execution\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-execution\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"command-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedServer || '',\n              onChange: e => setSelectedServer(Number(e.target.value)),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Server\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }, this), servers.map(server => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: server.id,\n                disabled: !server.status,\n                children: [server.name, \" \", !server.status ? '(Disconnected)' : '']\n              }, server.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: command,\n              onChange: e => setCommand(e.target.value),\n              placeholder: \"Enter command...\",\n              disabled: !selectedServer || !((_servers$find = servers.find(s => s.id === selectedServer)) !== null && _servers$find !== void 0 && _servers$find.status)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: !selectedServer || !((_servers$find2 = servers.find(s => s.id === selectedServer)) !== null && _servers$find2 !== void 0 && _servers$find2.status),\n              children: \"Execute\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"console-output\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Console Output\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"output-container\",\n            children: [commandOutput.map((output, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `output-line ${output.success ? 'success' : 'error'}`,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"server-tag\",\n                children: [\"Server \", output.server, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 19\n              }, this), \" \", output.output]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: messagesEndRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Metrics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metrics-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metrics-block\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"System Metrics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"CPU Usage:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress\",\n                style: {\n                  width: `${systemMetrics.cpuUsage}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [systemMetrics.cpuUsage.toFixed(1), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"RAM Usage:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress\",\n                style: {\n                  width: `${systemMetrics.ramUsage}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [systemMetrics.ramUsage.toFixed(1), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Disk Usage:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress\",\n                style: {\n                  width: `${systemMetrics.diskUsage}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [systemMetrics.diskUsage.toFixed(1), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Network:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\u2191 \", formatBytes(systemMetrics.networkActivity.bytes_sent), \" | \\u2193 \", formatBytes(systemMetrics.networkActivity.bytes_recv)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), selectedServer && serverMetrics[selectedServer] && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metrics-block\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Server Metrics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"CPU Usage:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress\",\n                style: {\n                  width: `${serverMetrics[selectedServer].cpu_usage}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [serverMetrics[selectedServer].cpu_usage.toFixed(1), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Memory:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress\",\n                style: {\n                  width: `${(serverMetrics[selectedServer].memory_usage / 1024).toFixed(1)}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: formatBytes(serverMetrics[selectedServer].memory_usage * 1024 * 1024)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Disk:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress\",\n                style: {\n                  width: `${(serverMetrics[selectedServer].disk_usage / 1024).toFixed(1)}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: formatBytes(serverMetrics[selectedServer].disk_usage * 1024 * 1024)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Network:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\u2191 \", formatBytes(serverMetrics[selectedServer].network_in * 1024), \" | \\u2193 \", formatBytes(serverMetrics[selectedServer].network_out * 1024)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"System Messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages-container\",\n        children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message\",\n          children: message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rQmmNkAgVEnfbV0ZJbMvQe5qZtE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","App","_s","_servers$find","_servers$find2","servers","setServers","selectedServer","setSelectedServer","messages","setMessages","command","setCommand","commandOutput","setCommandOutput","systemMetrics","setSystemMetrics","cpuUsage","ramUsage","diskUsage","networkActivity","bytes_sent","bytes_recv","serverMetrics","setServerMetrics","websocketRef","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","websocket","WebSocket","onopen","console","log","prev","onmessage","event","data","JSON","parse","type","length","id","map","server","server_id","status","message","success","output","metrics","stringify","onclose","close","fetchSystemMetrics","response","fetch","headers","credentials","ok","json","cpu_usage","ram_usage","disk_usage","network_activity","error","intervalId","setInterval","clearInterval","handleConnectServer","serverId","readyState","OPEN","send","handleDisconnectServer","handleSubmit","preventDefault","trim","method","body","formatBytes","bytes","k","sizes","i","Math","floor","parseFloat","pow","toFixed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","name","host","port","onSubmit","value","onChange","e","Number","target","disabled","placeholder","find","s","index","ref","style","width","memory_usage","network_in","network_out","_c","$RefreshReg$"],"sources":["C:/Users/atchi/servers/mcp-switchboard/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [servers, setServers] = useState([]);\r\n  const [selectedServer, setSelectedServer] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [command, setCommand] = useState('');\r\n  const [commandOutput, setCommandOutput] = useState([]);\r\n  const [systemMetrics, setSystemMetrics] = useState({\r\n    cpuUsage: 0,\r\n    ramUsage: 0,\r\n    diskUsage: 0,\r\n    networkActivity: { bytes_sent: 0, bytes_recv: 0 }\r\n  });\r\n  const [serverMetrics, setServerMetrics] = useState({});\r\n  \r\n  const websocketRef = useRef(null);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  // Scroll to bottom of messages\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages, commandOutput]);\r\n\r\n  useEffect(() => {\r\n    // Connect to WebSocket\r\n    const websocket = new WebSocket(\"ws://localhost:8000/ws/1\");\r\n    websocketRef.current = websocket;\r\n\r\n    websocket.onopen = () => {\r\n      console.log(\"Connected to WebSocket\");\r\n      setMessages(prev => [...prev, \"Connected to MCP Switchboard\"]);\r\n    };\r\n\r\n    websocket.onmessage = (event) => {\r\n      const data = JSON.parse(event.data);\r\n      console.log(\"Message from server:\", data);\r\n      \r\n      if (data.type === \"server_list\") {\r\n        setServers(data.servers);\r\n        if (data.servers.length > 0 && !selectedServer) {\r\n          setSelectedServer(data.servers[0].id);\r\n        }\r\n      } \r\n      else if (data.type === \"server_status_update\") {\r\n        setServers(prev => prev.map(server => \r\n          server.id === data.server_id \r\n            ? { ...server, status: data.status } \r\n            : server\r\n        ));\r\n        setMessages(prev => [...prev, data.message]);\r\n      } \r\n      else if (data.type === \"command_result\") {\r\n        setCommandOutput(prev => [...prev, {\r\n          server: data.server_id,\r\n          success: data.success,\r\n          output: data.output\r\n        }]);\r\n        setMessages(prev => [...prev, data.message]);\r\n      } \r\n      else if (data.type === \"server_metrics\") {\r\n        setServerMetrics(prev => ({\r\n          ...prev,\r\n          [data.server_id]: data.metrics\r\n        }));\r\n      }\r\n      else {\r\n        setMessages(prev => [...prev, JSON.stringify(data)]);\r\n      }\r\n    };\r\n\r\n    websocket.onclose = () => {\r\n      console.log(\"Disconnected from WebSocket\");\r\n      setMessages(prev => [...prev, \"Disconnected from MCP Switchboard\"]);\r\n    };\r\n\r\n    return () => {\r\n      websocket.close();\r\n    };\r\n  }, []);\r\n\r\n  // Fetch system metrics\r\n  useEffect(() => {\r\n    const fetchSystemMetrics = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:8000/metrics\", {\r\n          headers: {\r\n            'Authorization': 'Bearer fake_token',\r\n            'Content-Type': 'application/json'\r\n          },\r\n          credentials: 'include'\r\n        });\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setSystemMetrics({\r\n            cpuUsage: data.cpu_usage,\r\n            ramUsage: data.ram_usage,\r\n            diskUsage: data.disk_usage,\r\n            networkActivity: data.network_activity\r\n          });\r\n        } else {\r\n          console.error(\"Failed to fetch system metrics\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching system metrics:\", error);\r\n      }\r\n    };\r\n\r\n    fetchSystemMetrics();\r\n    const intervalId = setInterval(fetchSystemMetrics, 5000);\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  // Connect to a server\r\n  const handleConnectServer = (serverId) => {\r\n    if (websocketRef.current && websocketRef.current.readyState === WebSocket.OPEN) {\r\n      websocketRef.current.send(JSON.stringify({\r\n        type: \"connect_server\",\r\n        server_id: serverId\r\n      }));\r\n    }\r\n  };\r\n\r\n  // Disconnect from a server\r\n  const handleDisconnectServer = (serverId) => {\r\n    if (websocketRef.current && websocketRef.current.readyState === WebSocket.OPEN) {\r\n      websocketRef.current.send(JSON.stringify({\r\n        type: \"disconnect_server\",\r\n        server_id: serverId\r\n      }));\r\n    }\r\n  };\r\n\r\n  // Execute a command\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    \r\n    if (!selectedServer) {\r\n      setMessages(prev => [...prev, \"No server selected\"]);\r\n      return;\r\n    }\r\n    \r\n    if (!command.trim()) {\r\n      setMessages(prev => [...prev, \"Command cannot be empty\"]);\r\n      return;\r\n    }\r\n    \r\n    // Send command via WebSocket\r\n    if (websocketRef.current && websocketRef.current.readyState === WebSocket.OPEN) {\r\n      websocketRef.current.send(JSON.stringify({\r\n        type: \"execute_command\",\r\n        server_id: selectedServer,\r\n        command: command\r\n      }));\r\n      setCommand(\"\");\r\n    } else {\r\n      // Fallback to REST API if WebSocket is not available\r\n      try {\r\n        const response = await fetch(`http://localhost:8000/execute/${selectedServer}`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded',\r\n            'Authorization': 'Bearer fake_token'\r\n          },\r\n          body: `command=${command}`\r\n        });\r\n\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          console.log(\"Command executed successfully:\", data);\r\n          setMessages(prev => [...prev, data.message]);\r\n          setCommandOutput(prev => [...prev, {\r\n            server: selectedServer,\r\n            success: true,\r\n            output: data.output || data.message\r\n          }]);\r\n          setCommand(\"\");\r\n        } else {\r\n          console.error(\"Command execution failed:\", response.status);\r\n          setMessages(prev => [...prev, `Command execution failed: ${response.status}`]);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error executing command:\", error);\r\n        setMessages(prev => [...prev, `Error executing command: ${error.message}`]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Format metrics for display\r\n  const formatBytes = (bytes) => {\r\n    if (bytes === 0) return '0 Bytes';\r\n    const k = 1024;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>MCP Switchboard</h1>\r\n      </header>\r\n      \r\n      {/* Server Management Section */}\r\n      <section className=\"section\">\r\n        <h2>Server Management</h2>\r\n        <div className=\"server-grid\">\r\n          {servers.map(server => (\r\n            <div \r\n              key={server.id} \r\n              className={`server-block ${selectedServer === server.id ? 'selected' : ''}`}\r\n              onClick={() => setSelectedServer(server.id)}\r\n            >\r\n              <h3>{server.name}</h3>\r\n              <p>Host: {server.host}</p>\r\n              <p>Port: {server.port}</p>\r\n              <p>Type: {server.type}</p>\r\n              <p className={`status ${server.status ? 'active' : 'inactive'}`}>\r\n                Status: {server.status ? 'Connected' : 'Disconnected'}\r\n              </p>\r\n              <div className=\"server-actions\">\r\n                {!server.status ? (\r\n                  <button onClick={() => handleConnectServer(server.id)}>Connect</button>\r\n                ) : (\r\n                  <button onClick={() => handleDisconnectServer(server.id)}>Disconnect</button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </section>\r\n      \r\n      {/* Task Execution Section */}\r\n      <section className=\"section\">\r\n        <h2>Task Execution</h2>\r\n        <div className=\"task-execution\">\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"command-input\">\r\n              <select \r\n                value={selectedServer || ''} \r\n                onChange={(e) => setSelectedServer(Number(e.target.value))}\r\n              >\r\n                <option value=\"\">Select Server</option>\r\n                {servers.map(server => (\r\n                  <option key={server.id} value={server.id} disabled={!server.status}>\r\n                    {server.name} {!server.status ? '(Disconnected)' : ''}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n              <input\r\n                type=\"text\"\r\n                value={command}\r\n                onChange={(e) => setCommand(e.target.value)}\r\n                placeholder=\"Enter command...\"\r\n                disabled={!selectedServer || !servers.find(s => s.id === selectedServer)?.status}\r\n              />\r\n              <button \r\n                type=\"submit\" \r\n                disabled={!selectedServer || !servers.find(s => s.id === selectedServer)?.status}\r\n              >\r\n                Execute\r\n              </button>\r\n            </div>\r\n          </form>\r\n          \r\n          <div className=\"console-output\">\r\n            <h3>Console Output</h3>\r\n            <div className=\"output-container\">\r\n              {commandOutput.map((output, index) => (\r\n                <div key={index} className={`output-line ${output.success ? 'success' : 'error'}`}>\r\n                  <span className=\"server-tag\">Server {output.server}:</span> {output.output}\r\n                </div>\r\n              ))}\r\n              <div ref={messagesEndRef} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      \r\n      {/* Metrics Section */}\r\n      <section className=\"section\">\r\n        <h2>Metrics</h2>\r\n        <div className=\"metrics-container\">\r\n          <div className=\"metrics-block\">\r\n            <h3>System Metrics</h3>\r\n            <div className=\"metric\">\r\n              <span>CPU Usage:</span>\r\n              <div className=\"progress-bar\">\r\n                <div className=\"progress\" style={{ width: `${systemMetrics.cpuUsage}%` }}></div>\r\n              </div>\r\n              <span>{systemMetrics.cpuUsage.toFixed(1)}%</span>\r\n            </div>\r\n            <div className=\"metric\">\r\n              <span>RAM Usage:</span>\r\n              <div className=\"progress-bar\">\r\n                <div className=\"progress\" style={{ width: `${systemMetrics.ramUsage}%` }}></div>\r\n              </div>\r\n              <span>{systemMetrics.ramUsage.toFixed(1)}%</span>\r\n            </div>\r\n            <div className=\"metric\">\r\n              <span>Disk Usage:</span>\r\n              <div className=\"progress-bar\">\r\n                <div className=\"progress\" style={{ width: `${systemMetrics.diskUsage}%` }}></div>\r\n              </div>\r\n              <span>{systemMetrics.diskUsage.toFixed(1)}%</span>\r\n            </div>\r\n            <div className=\"metric\">\r\n              <span>Network:</span>\r\n              <span>\r\n                ↑ {formatBytes(systemMetrics.networkActivity.bytes_sent)} | \r\n                ↓ {formatBytes(systemMetrics.networkActivity.bytes_recv)}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          \r\n          {selectedServer && serverMetrics[selectedServer] && (\r\n            <div className=\"metrics-block\">\r\n              <h3>Server Metrics</h3>\r\n              <div className=\"metric\">\r\n                <span>CPU Usage:</span>\r\n                <div className=\"progress-bar\">\r\n                  <div className=\"progress\" style={{ width: `${serverMetrics[selectedServer].cpu_usage}%` }}></div>\r\n                </div>\r\n                <span>{serverMetrics[selectedServer].cpu_usage.toFixed(1)}%</span>\r\n              </div>\r\n              <div className=\"metric\">\r\n                <span>Memory:</span>\r\n                <div className=\"progress-bar\">\r\n                  <div className=\"progress\" style={{ width: `${(serverMetrics[selectedServer].memory_usage / 1024).toFixed(1)}%` }}></div>\r\n                </div>\r\n                <span>{formatBytes(serverMetrics[selectedServer].memory_usage * 1024 * 1024)}</span>\r\n              </div>\r\n              <div className=\"metric\">\r\n                <span>Disk:</span>\r\n                <div className=\"progress-bar\">\r\n                  <div className=\"progress\" style={{ width: `${(serverMetrics[selectedServer].disk_usage / 1024).toFixed(1)}%` }}></div>\r\n                </div>\r\n                <span>{formatBytes(serverMetrics[selectedServer].disk_usage * 1024 * 1024)}</span>\r\n              </div>\r\n              <div className=\"metric\">\r\n                <span>Network:</span>\r\n                <span>\r\n                  ↑ {formatBytes(serverMetrics[selectedServer].network_in * 1024)} | \r\n                  ↓ {formatBytes(serverMetrics[selectedServer].network_out * 1024)}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </section>\r\n      \r\n      {/* System Messages */}\r\n      <section className=\"section\">\r\n        <h2>System Messages</h2>\r\n        <div className=\"messages-container\">\r\n          {messages.map((message, index) => (\r\n            <div key={index} className=\"message\">{message}</div>\r\n          ))}\r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}