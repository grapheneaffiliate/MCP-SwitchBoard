{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\atchi\\\\servers\\\\mcp-switchboard\\\\frontend\\\\src\\\\TasksPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport BatchCommandExecutor from './BatchCommandExecutor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TasksPage({\n  servers,\n  selectedServer\n}) {\n  _s();\n  const [activeTab, setActiveTab] = useState('tasks');\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState({\n    name: '',\n    command: '',\n    server_id: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Fetch tasks when component mounts or selectedServer changes\n  useEffect(() => {\n    fetchTasks();\n  }, [selectedServer]);\n  const fetchTasks = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('http://localhost:8000/tasks');\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setTasks(data);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n      setError('Failed to fetch tasks. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewTask({\n      ...newTask,\n      [name]: value\n    });\n  };\n  const handleServerChange = e => {\n    setNewTask({\n      ...newTask,\n      server_id: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!newTask.name || !newTask.command || !newTask.server_id) {\n      setError('Please fill in all fields');\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('http://localhost:8000/tasks', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newTask)\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      // Reset form and fetch updated tasks\n      setNewTask({\n        name: '',\n        command: '',\n        server_id: ''\n      });\n      fetchTasks();\n    } catch (error) {\n      console.error('Error creating task:', error);\n      setError('Failed to create task. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDeleteTask = async taskId => {\n    if (!window.confirm('Are you sure you want to delete this task?')) {\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await fetch(`http://localhost:8000/tasks/${taskId}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      // Fetch updated tasks\n      fetchTasks();\n    } catch (error) {\n      console.error('Error deleting task:', error);\n      setError('Failed to delete task. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleRunTask = async taskId => {\n    setLoading(true);\n    try {\n      const response = await fetch(`http://localhost:8000/tasks/${taskId}/run`, {\n        method: 'POST'\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      // Fetch updated tasks to show new status\n      fetchTasks();\n    } catch (error) {\n      console.error('Error running task:', error);\n      setError('Failed to run task. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Format date for display\n  const formatDate = dateString => {\n    const options = {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n\n  // Get status badge class based on status\n  const getStatusBadgeClass = status => {\n    switch (status) {\n      case 'completed':\n        return 'status-badge completed';\n      case 'failed':\n        return 'status-badge failed';\n      case 'running':\n        return 'status-badge running';\n      case 'pending':\n        return 'status-badge pending';\n      default:\n        return 'status-badge';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"task-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Task Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            name: \"name\",\n            value: newTask.name,\n            onChange: handleInputChange,\n            placeholder: \"Enter task name\",\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"command\",\n            children: \"Command\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"command\",\n            name: \"command\",\n            value: newTask.command,\n            onChange: handleInputChange,\n            placeholder: \"Enter command to execute\",\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"server_id\",\n            children: \"Server\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"server_id\",\n            name: \"server_id\",\n            value: newTask.server_id,\n            onChange: handleServerChange,\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a server\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this), servers.map(server => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: server.id,\n              children: [server.name, \" \", !server.status ? '(Disconnected)' : '']\n            }, server.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          disabled: loading,\n          children: loading ? 'Creating...' : 'Create Task'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), loading && tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading tasks...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this) : tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No tasks found. Create a new task to get started.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-list\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"task-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Command\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Server\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Created\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Last Run\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: tasks.map(task => {\n              const taskServer = servers.find(s => s.id === task.server_id);\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: task.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"command-cell\",\n                  children: task.command\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: taskServer ? taskServer.name : 'Unknown'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: getStatusBadgeClass(task.status),\n                    children: task.status\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatDate(task.created_at)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: task.last_run ? formatDate(task.last_run) : 'Never'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"actions-cell\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleRunTask(task.id),\n                    disabled: task.status === 'running' || !(taskServer !== null && taskServer !== void 0 && taskServer.status),\n                    className: \"btn btn-sm btn-primary\",\n                    children: \"Run\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleDeleteTask(task.id),\n                    className: \"btn btn-sm btn-danger\",\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 23\n                }, this)]\n              }, task.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Task History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Recent task executions will be displayed here.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-history-placeholder\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Task history feature coming soon!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n}\n_s(TasksPage, \"KYHYUJVjPMPfvV7o3kP4Tl+LM/8=\");\n_c = TasksPage;\nexport default TasksPage;\nvar _c;\n$RefreshReg$(_c, \"TasksPage\");","map":{"version":3,"names":["React","useState","useEffect","BatchCommandExecutor","jsxDEV","_jsxDEV","TasksPage","servers","selectedServer","_s","activeTab","setActiveTab","tasks","setTasks","newTask","setNewTask","name","command","server_id","loading","setLoading","error","setError","fetchTasks","response","fetch","ok","Error","status","data","json","console","handleInputChange","e","value","target","handleServerChange","handleSubmit","preventDefault","method","headers","body","JSON","stringify","handleDeleteTask","taskId","window","confirm","handleRunTask","formatDate","dateString","options","year","month","day","hour","minute","Date","toLocaleDateString","undefined","getStatusBadgeClass","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","placeholder","map","server","disabled","length","task","taskServer","find","s","created_at","last_run","onClick","_c","$RefreshReg$"],"sources":["C:/Users/atchi/servers/mcp-switchboard/frontend/src/TasksPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport BatchCommandExecutor from './BatchCommandExecutor';\r\n\r\nfunction TasksPage({ servers, selectedServer }) {\r\n  const [activeTab, setActiveTab] = useState('tasks');\r\n  const [tasks, setTasks] = useState([]);\r\n  const [newTask, setNewTask] = useState({ name: '', command: '', server_id: '' });\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Fetch tasks when component mounts or selectedServer changes\r\n  useEffect(() => {\r\n    fetchTasks();\r\n  }, [selectedServer]);\r\n\r\n  const fetchTasks = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch('http://localhost:8000/tasks');\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n      setTasks(data);\r\n    } catch (error) {\r\n      console.error('Error fetching tasks:', error);\r\n      setError('Failed to fetch tasks. Please try again later.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewTask({ ...newTask, [name]: value });\r\n  };\r\n\r\n  const handleServerChange = (e) => {\r\n    setNewTask({ ...newTask, server_id: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!newTask.name || !newTask.command || !newTask.server_id) {\r\n      setError('Please fill in all fields');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch('http://localhost:8000/tasks', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(newTask),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      // Reset form and fetch updated tasks\r\n      setNewTask({ name: '', command: '', server_id: '' });\r\n      fetchTasks();\r\n    } catch (error) {\r\n      console.error('Error creating task:', error);\r\n      setError('Failed to create task. Please try again later.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDeleteTask = async (taskId) => {\r\n    if (!window.confirm('Are you sure you want to delete this task?')) {\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(`http://localhost:8000/tasks/${taskId}`, {\r\n        method: 'DELETE',\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      // Fetch updated tasks\r\n      fetchTasks();\r\n    } catch (error) {\r\n      console.error('Error deleting task:', error);\r\n      setError('Failed to delete task. Please try again later.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleRunTask = async (taskId) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(`http://localhost:8000/tasks/${taskId}/run`, {\r\n        method: 'POST',\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      // Fetch updated tasks to show new status\r\n      fetchTasks();\r\n    } catch (error) {\r\n      console.error('Error running task:', error);\r\n      setError('Failed to run task. Please try again later.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Format date for display\r\n  const formatDate = (dateString) => {\r\n    const options = { \r\n      year: 'numeric', \r\n      month: 'short', \r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    };\r\n    return new Date(dateString).toLocaleDateString(undefined, options);\r\n  };\r\n\r\n  // Get status badge class based on status\r\n  const getStatusBadgeClass = (status) => {\r\n    switch (status) {\r\n      case 'completed':\r\n        return 'status-badge completed';\r\n      case 'failed':\r\n        return 'status-badge failed';\r\n      case 'running':\r\n        return 'status-badge running';\r\n      case 'pending':\r\n        return 'status-badge pending';\r\n      default:\r\n        return 'status-badge';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"tasks-page\">\r\n      <h2>Task Management</h2>\r\n      \r\n      {/* Create Task Form */}\r\n      <section className=\"section\">\r\n        <h3>Create New Task</h3>\r\n        <form onSubmit={handleSubmit} className=\"task-form\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">Task Name</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              name=\"name\"\r\n              value={newTask.name}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Enter task name\"\r\n              className=\"form-control\"\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"command\">Command</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"command\"\r\n              name=\"command\"\r\n              value={newTask.command}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Enter command to execute\"\r\n              className=\"form-control\"\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"server_id\">Server</label>\r\n            <select\r\n              id=\"server_id\"\r\n              name=\"server_id\"\r\n              value={newTask.server_id}\r\n              onChange={handleServerChange}\r\n              className=\"form-control\"\r\n            >\r\n              <option value=\"\">Select a server</option>\r\n              {servers.map(server => (\r\n                <option key={server.id} value={server.id}>\r\n                  {server.name} {!server.status ? '(Disconnected)' : ''}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          \r\n          <button \r\n            type=\"submit\" \r\n            className=\"btn btn-primary\"\r\n            disabled={loading}\r\n          >\r\n            {loading ? 'Creating...' : 'Create Task'}\r\n          </button>\r\n        </form>\r\n        \r\n        {error && <div className=\"error-message\">{error}</div>}\r\n      </section>\r\n      \r\n      {/* Task List */}\r\n      <section className=\"section\">\r\n        <h3>Tasks</h3>\r\n        {loading && tasks.length === 0 ? (\r\n          <p>Loading tasks...</p>\r\n        ) : tasks.length === 0 ? (\r\n          <p>No tasks found. Create a new task to get started.</p>\r\n        ) : (\r\n          <div className=\"task-list\">\r\n            <table className=\"task-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Name</th>\r\n                  <th>Command</th>\r\n                  <th>Server</th>\r\n                  <th>Status</th>\r\n                  <th>Created</th>\r\n                  <th>Last Run</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {tasks.map(task => {\r\n                  const taskServer = servers.find(s => s.id === task.server_id);\r\n                  return (\r\n                    <tr key={task.id}>\r\n                      <td>{task.name}</td>\r\n                      <td className=\"command-cell\">{task.command}</td>\r\n                      <td>{taskServer ? taskServer.name : 'Unknown'}</td>\r\n                      <td>\r\n                        <span className={getStatusBadgeClass(task.status)}>\r\n                          {task.status}\r\n                        </span>\r\n                      </td>\r\n                      <td>{formatDate(task.created_at)}</td>\r\n                      <td>{task.last_run ? formatDate(task.last_run) : 'Never'}</td>\r\n                      <td className=\"actions-cell\">\r\n                        <button \r\n                          onClick={() => handleRunTask(task.id)}\r\n                          disabled={task.status === 'running' || !taskServer?.status}\r\n                          className=\"btn btn-sm btn-primary\"\r\n                        >\r\n                          Run\r\n                        </button>\r\n                        <button \r\n                          onClick={() => handleDeleteTask(task.id)}\r\n                          className=\"btn btn-sm btn-danger\"\r\n                        >\r\n                          Delete\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n      </section>\r\n      \r\n      {/* Task History */}\r\n      <section className=\"section\">\r\n        <h3>Task History</h3>\r\n        <p>Recent task executions will be displayed here.</p>\r\n        {/* Task history implementation would go here */}\r\n        <div className=\"task-history-placeholder\">\r\n          <p>Task history feature coming soon!</p>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TasksPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}