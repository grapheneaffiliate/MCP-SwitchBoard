{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\atchi\\\\servers\\\\mcp-switchboard\\\\frontend\\\\src\\\\MetricsDashboard.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MetricsDashboard({\n  servers,\n  selectedServer\n}) {\n  const selectedServerData = servers.find(server => server.id === selectedServer);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Metrics Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), selectedServerData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [selectedServerData.name, \" Metrics\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Displaying metrics for \", selectedServerData.name, \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No server selected or available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_c = MetricsDashboard;\nexport default MetricsDashboard;\nvar _c;\n$RefreshReg$(_c, \"MetricsDashboard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","MetricsDashboard","servers","selectedServer","selectedServerData","find","server","id","children","fileName","_jsxFileName","lineNumber","columnNumber","name","_c","$RefreshReg$"],"sources":["C:/Users/atchi/servers/mcp-switchboard/frontend/src/MetricsDashboard.js"],"sourcesContent":["import React from 'react';\r\n\r\nfunction MetricsDashboard({ servers, selectedServer }) {\r\n  const selectedServerData = servers.find(server => server.id === selectedServer);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Metrics Dashboard</h2>\r\n      {selectedServerData ? (\r\n        <div>\r\n          <h3>{selectedServerData.name} Metrics</h3>\r\n          {/* Add metrics visualizations here for the selected server */}\r\n          <p>Displaying metrics for {selectedServerData.name}.</p>\r\n        </div>\r\n      ) : (\r\n        <p>No server selected or available.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MetricsDashboard;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,gBAAgBA,CAAC;EAAEC,OAAO;EAAEC;AAAe,CAAC,EAAE;EACrD,MAAMC,kBAAkB,GAAGF,OAAO,CAACG,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACC,EAAE,KAAKJ,cAAc,CAAC;EAE/E,oBACEH,OAAA;IAAAQ,QAAA,gBACER,OAAA;MAAAQ,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzBR,kBAAkB,gBACjBJ,OAAA;MAAAQ,QAAA,gBACER,OAAA;QAAAQ,QAAA,GAAKJ,kBAAkB,CAACS,IAAI,EAAC,UAAQ;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAE1CZ,OAAA;QAAAQ,QAAA,GAAG,yBAAuB,EAACJ,kBAAkB,CAACS,IAAI,EAAC,GAAC;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC,gBAENZ,OAAA;MAAAQ,QAAA,EAAG;IAAgC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACvC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACE,EAAA,GAjBQb,gBAAgB;AAmBzB,eAAeA,gBAAgB;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}